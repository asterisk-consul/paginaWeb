---
import SectionPrincipal from "./SectionPrincipal.astro";
import ChevronDER from "@/components/icons/ChevronDER.astro";
import ChevronIZQ from "@/components/icons/ChevronIZQ.astro";
---

<!-- component -->
<div class="relative w-full h-[100vh] bg-slate-800 overflow-hidden">
  <!-- Radios -->
  <input class="hidden" type="radio" name="slider" id="slider1" checked />
  <input class="hidden" type="radio" name="slider" id="slider2" />
  <input class="hidden" type="radio" name="slider" id="slider3" />

  <!-- Slides -->
  <div
    id="slidesContainer"
    class="relative w-[300vw] h-[100vh] flex transition-all duration-500 ease-in-out -left-0"
  >
    <div class="relative w-full h-full">
      <SectionPrincipal />
    </div>
    <div class="relative w-full h-full">
      <SectionPrincipal />
    </div>
    <div class="relative w-full h-full bg-emerald-500"></div>
  </div>

  <!-- Indicadores -->
  <div class="absolute w-full flex justify-center gap-2 bottom-12">
    <label
      for="slider1"
      id="label1"
      class="indicator block w-3 h-3 rounded-2xl bg-white cursor-pointer opacity-50 transition-all hover:scale-125 hover:opacity-100 active"
    ></label>
    <label
      for="slider2"
      id="label2"
      class="indicator block w-3 h-3 rounded-2xl bg-white cursor-pointer opacity-50 transition-all hover:scale-125 hover:opacity-100"
    ></label>
    <label
      for="slider3"
      id="label3"
      class="indicator block w-3 h-3 rounded-2xl bg-white cursor-pointer opacity-50 transition-all hover:scale-125 hover:opacity-100"
    ></label>
  </div>

  <!-- Botones -->
  <div
    class="absolute top-1/2 left-0 right-0 flex justify-between px-4 transform -translate-y-1/2 z-10"
  >
    <button
      onclick="prevSlide()"
      class="text-white bg-black/30 p-3 rounded-full hover:bg-black/50 cursor-pointer"
      ><ChevronIZQ /></button
    >
    <button
      onclick="nextSlide()"
      class="text-white bg-black/30 p-3 rounded-full hover:bg-black/50 cursor-pointer"
      ><ChevronDER /></button
    >
  </div>
</div>

<style>
  .indicator.active {
    width: 2rem; /* w-8 equivalente */
    background-color: #e63605; /* bg-blue-400 equivalente */
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06); /* shadow-md equivalente */
    opacity: 1;
  }
</style>

<script is:inline>
  let current = 1;
  const total = 3;

  function showSlide(n) {
    current = n;

    // Actualizar radio buttons
    document.getElementById(`slider${n}`).checked = true;

    // Actualizar posici칩n del contenedor de slides
    const slidesContainer = document.getElementById("slidesContainer");
    slidesContainer.style.left = `-${(n - 1) * 100}vw`;

    // Actualizar indicadores
    updateIndicators(n);
  }

  function updateIndicators(n) {
    // Eliminar clase active de todos los indicadores
    document.querySelectorAll(".indicator").forEach((indicator) => {
      indicator.classList.remove("active");
    });

    // A침adir clase active al indicador actual
    document.getElementById(`label${n}`).classList.add("active");
  }

  function nextSlide() {
    showSlide(current >= total ? 1 : current + 1);
  }

  function prevSlide() {
    showSlide(current <= 1 ? total : current - 1);
  }

  // Configurar event listeners para los radio buttons
  document.querySelectorAll('input[name="slider"]').forEach((radio) => {
    radio.addEventListener("change", function () {
      const slideNumber = this.id.replace("slider", "");
      showSlide(parseInt(slideNumber));
    });
  });

  // Inicializar
  window.addEventListener("DOMContentLoaded", function () {
    // Asegurarse de que el primer slide est치 seleccionado al cargar
    showSlide(1);

    // Avance autom치tico
    setInterval(() => {
      nextSlide();
    }, 8000); // cada 8 segundos
  });
</script>
